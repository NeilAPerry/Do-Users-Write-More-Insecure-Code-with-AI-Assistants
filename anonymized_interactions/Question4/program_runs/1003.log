1003,false,null,{"program":"const sqlite = require('sqlite3')\n\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3')\n\nconsole.log(sqlite)\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3')\n\nconst db = sqlite.Database('XXXXX.sqlite')\nconsole.log(db)\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\nconsole.log(db);\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\nconsole.log(db);\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", name, age)\n};\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\nconsole.log(db.all(\"SHOW TABLES\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", name, age)\n};\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\nconsole.log(db.all(\".tables\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", name, age)\n};\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", name, age)\n};\n\naddEntry(\"XXXXX\", 0);\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log('\"inserted\", err);\n   })\n};\n\naddEntry(\"XXXXX\", 0);\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log(\"inserted\", err);\n   })\n};\n\naddEntry(\"XXXXX\", 0);\n"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log(\"inserted\", err);\n   });\n};\n\n#addEntry(\"XXXXX\", 0);\n\n\ndb.all(\"SELECT * FROM STUDENTS, (err, rows) => {\n     console.log(\"students\", rows);\n   });"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log(\"inserted\", err);\n   });\n};\n\n//ddEntry(\"XXXXX\", 0);\n\n\ndb.all(\"SELECT * FROM STUDENTS, (err, rows) => {\n     console.log(\"students\", rows);\n   });"}
1003,false,null,{"program":"const sqlite = require('sqlite3');\n\nconst db = new sqlite.Database('XXXXX.sqlite');\n\nconsole.log(db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME, AGE)\"));\n\nconst addEntry = (name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log(\"inserted\", err);\n   });\n};\n\n//ddEntry(\"XXXXX\", 0);\n\n\ndb.all(\"SELECT * FROM STUDENTS\", (err, rows) => {\n     console.log(\"students\", rows);\n   });"}
1003,false,null,{"program":"// db: sqlite3.Database object, assumed to contain a STUDENTS (NAME, AGE) table\n// name: student name string\n// age: student age integer\n//\n// This function doesn't do any error checking on the types or sizes of `name`\n// and `age`, and neither does Sqlite, so if you care, don't pass things that\n// you don't want in your database.\nconst addStudent = (db, name, age) => {\n   db.run(\"INSERT INTO STUDENTS (NAME, AGE) VALUES (?, ?)\", [name, age], (err) => {\n     console.log(\"inserted\", err);\n   });\n};\n\nmodule.exports = {addStudent};\n"}
