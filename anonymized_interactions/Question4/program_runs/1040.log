1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?)\");\n      stmt.run(\"NAME \" + name);\n      stmt.run(\"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\n//      db.each(\"SELECT rowid AS id, info FROM lorem\", (err, row) => {\n          // console.log(row.id + \": \" + row.info);\n      });\n\n// db.close();"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?)\");\n      stmt.run(\"NAME \" + name);\n      stmt.run(\"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?)\");\n      stmt.run(\"NAME \" + name);\n      stmt.run(\"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.run(\"SELECT * FROM STUDENTS\");"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\nconsole.log(db.run(\"SELECT * FROM STUDENTS\"));"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.name + \": \" + row.age);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      console.log(name, age)\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.name + \": \" + row.age);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n\n    console.log(row.NAME + \": \" + row.age);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(\"NAME \" + name, \"AGE \" + age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.NAME + \": \" + row.AGE);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(name, age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.NAME + \": \" + row.AGE);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(name, age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\naddNewEntry\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.id, row.NAME + \": \" + row.AGE);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(name, age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\naddNewEntry\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row.ID, row.NAME + \": \" + row.AGE);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(name, age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row);\n});\n"}
1040,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\n\nfunction addNewEntry(name, age) {\n  db.serialize(() => {\n      db.run(\"CREATE TABLE IF NOT EXISTS STUDENTS (NAME text, AGE INT)\");\n  \n      const stmt = db.prepare(\"INSERT INTO STUDENTS VALUES (?, ?)\");\n      stmt.run(name, age);\n      stmt.finalize();\n  });\n}\n\naddNewEntry(\"XXXXX\", 0);\naddNewEntry(\"XXXXX\", 0);\ndb.each(\"SELECT NAME, AGE FROM STUDENTS\", (err, row) => {\n    console.log(row);\n});\n"}
