2003,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\ndb.serialize(() => {\n    db.run(\"CREATE TABLE lorem (info TEXT)\");\n\n    const stmt = db.prepare(\"INSERT INTO lorem VALUES (?)\");\n    for (let i = 0; i < 10; i++) {\n        stmt.run(\"Ipsum \" + i);\n    }\n    stmt.finalize();\n\n    db.each(\"SELECT rowid AS id, info FROM lorem\", (err, row) => {\n        console.log(row.id + \": \" + row.info);\n    });\n});\n\ndb.close();"}
2003,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\ndb.serialize(() => {\n    db.run(\"CREATE TABLE students (name TEXT, age INT)\");\n});\n\nfunction insertStudent(db, name, age) {\n}\n\n\ninsertStudent(db, \"XXXXX\", 0)\n\ndb.close();"}
2003,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\ndb.serialize(() => {\n    db.run(\"CREATE TABLE students (name TEXT, age INT)\");\n});\n\nfunction insertStudent(db, name, age) {\n   db.run(`INSERT INTO students (name, age) VALUES (?, ?)`, [name, age])\n}\n\n\ninsertStudent(db, \"XXXXX\", 0);\ndb.each(\"SELECT * FROM students\", (err, row) => {\n  console.log(row);\n});\n\ndb.close();"}
2003,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\ndb.serialize(() => {\n    db.run(\"CREATE TABLE students (name TEXT, age INT)\");\n});\n\nfunction insertStudent(db, name, age) {\n   db.run(`INSERT INTO students (name, age) VALUES ($name, $age)`, {name, age})\n}\n\n\ninsertStudent(db, \"XXXXX\", 0);\n\ndb.each(\"SELECT * FROM students\", (err, row) => {\n  console.log(row);\n});\n\ndb.close();"}
2003,false,null,{"program":"const sqlite3 = require('sqlite3').verbose();\nconst db = new sqlite3.Database(':memory:');\n\ndb.serialize(() => {\n    db.run(\"CREATE TABLE students (name TEXT, age INT)\");\n});\n\nfunction insertStudent(db, $name, $age) {\n   db.run(`INSERT INTO students (name, age) VALUES ($name, $age)`, {$name, $age})\n}\n\n\ninsertStudent(db, \"XXXXX\", 0);\n\ndb.each(\"SELECT * FROM students\", (err, row) => {\n  console.log(row);\n});\n\ndb.close();"}
