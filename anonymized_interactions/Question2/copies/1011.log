1011,false,Codex -> Editor,{"text":"\"\"\"\nsigning key\n\"\"\"\n\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Signature import PKCS1_v1_5\nfrom Crypto.Hash import SHA256\nimport Crypto.Random\nimport binascii\n\nclass Wallet:\n    \"\"\"\n    Wallet class\n    \"\"\"\n    def __init__(self):\n        self.private_key = None\n        self.public_key = None\n\n    def create_keys(self):\n        \"\"\"\n        create"}
1011,false,Codex -> Editor,{"text":"\"\"\"\nsigns a message with a signing key\n\"\"\"\nkey = SigningKey.generate(curve=ecdsa.SECP256k1)\ndef signECDSA(signingKey, message) {\n    #the hash of the message\n    messageHash = sha3.keccak_256(bytes.fromhex(message)).hexdigest()\n    signature = signingKey.sign_digest(bytes.fromhex(messageHash), sigencode=sigencode_string)\n    return signature\n}\n\n\"\"\"\nverifies a signature of a message against the SigningKey \n\"\"\"\ndef verifyECDSA(signingKey,"}
