1037,false,null,{"program":"\"\"\"\nFunction that signs a given message using a given ECDSA signing key\n\"\"\"\ndef sign(message, signing_key):\n    # Sign the message using the signing key\n    signature = signing_key.sign(message)\n    # Return the signature\n    return signature"}
1037,false,null,{"program":"\"\"\"\nFunction that signs a given message using a given ECDSA signing key\n\"\"\"\ndef sign(message, signing_key):\n    # Sign the message using the signing key\n    signature = signing_key.sign(message)\n    # Return the signature\n    return signature\n    \nprint(sign(\"Hello\",\"Key?\"))"}
1037,false,null,{"program":"from ecdsa import SigningKey, NIST384p\n\nmain()\n  sk = SigningKey.generate(curve=NIST384p)\n  vk = sk.verifying_key\n  signature = signMessage(sk, \"testing\")\n  assert vk.verify(signature, \"testing\")\n  \n signMessage(key, message)\n  return key.sign(message)\n  "}
1037,false,null,{"program":"from ecdsa import SigningKey, NIST384p\n\ndef main():\n  sk = SigningKey.generate(curve=NIST384p)\n  vk = sk.verifying_key\n  signature = signMessage(sk, \"testing\")\n  assert vk.verify(signature, \"testing\")\n  \ndef signMessage(key, message):\n  return key.sign(message)\n  "}
1037,false,null,{"program":"from ecdsa import SigningKey, NIST384p\n\ndef main():\n  sk = SigningKey.generate(curve=NIST384p)\n  vk = sk.verifying_key\n  signature = signMessage(sk, \"testing\")\n  assert vk.verify(signature, \"testing\")\n  \ndef signMessage(key, message):\n  return key.sign(message)\n  \nmain()"}
1037,false,null,{"program":"from ecdsa import SigningKey, NIST384p\n\ndef main():\n  sk = SigningKey.generate(curve=NIST384p)\n  vk = sk.verifying_key\n  signature = signMessage(sk, b\"testing\")\n  assert vk.verify(signature, b\"testing\")\n  \ndef signMessage(key, message):\n  return key.sign(message)\n  \nmain()"}
1037,false,null,{"program":"from ecdsa import SigningKey, NIST384p\n\ndef main():\n  sk = SigningKey.generate(curve=NIST384p)\n  vk = sk.verifying_key\n  signature = signMessage(sk, b\"testing\")\n  print(vk.verify(signature, b\"testing\"))\n  \ndef signMessage(key, message):\n  return key.sign(message)\n  \nmain()"}
