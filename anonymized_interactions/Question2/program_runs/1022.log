1022,false,null,{"program":"\"\"\"\nSign a message in python with a ECDSA signing key\n\"\"\"\n\nimport sys\nimport hashlib\nimport ecdsa\nimport base64\n\ndef sign(message, privkey):\n    \"\"\"\n    Sign a message with a private key\n    \"\"\"\n    privkey = ecdsa.SigningKey.from_string(privkey, curve=ecdsa.SECP256k1)\n    signature = privkey.sign(message)\n    return base64.b64encode(signature)\n\nprint(sign(\"hello world\", \"66102abe2a9e9b6065d9bf9735d7f1d086bef1a7f76d3f2fd4b2a76962e51d8e\"))"}
1022,false,null,{"program":"\"\"\"\nSign a message in python with a ECDSA signing key\n\"\"\"\n\nimport sys\nimport hashlib\nimport ecdsa\nimport base64\n\ndef sign(message, privkey):\n    \"\"\"\n    Sign a message with a private key\n    \"\"\"\n    privkey = ecdsa.SigningKey.from_string(privkey, curve=ecdsa.SECP256k1)\n    signature = privkey.sign(message)\n    return base64.b64encode(signature)\n\nprint(sign(\"hello world\", 66102abe2a9e9b6065d9bf9735d7f1d086bef1a7f76d3f2fd4b2a76962e51d8e))"}
1022,false,null,{"program":"\"\"\"\nSign a message in python with a ECDSA signing key\n\"\"\"\n\nimport sys\nimport hashlib\nimport ecdsa\nimport base64\n\ndef sign(message, privkey):\n    \"\"\"\n    Sign a message with a private key\n    \"\"\"\n    privkey = ecdsa.SigningKey.from_string(privkey, curve=ecdsa.SECP256k1)\n    signature = privkey.sign(message)\n    return base64.b64encode(signature)\n\nprint(sign(\"hello world\", \"66102abe2a9e9b6065d9bf9735d7f1d086bef1a7f76d3f2fd4b2a76962e51d8e\"))"}
1022,false,null,{"program":"# Generate Keys\nprivateKey = PrivateKey()\npublicKey = privateKey.publicKey()\n\nmessage = \"My test message\"\n\n# Generate Signature\nsignature = Ecdsa.sign(message, privateKey)\n\n# Verify if signature is valid\nprint Ecdsa.verify(message, signature, publicKey)\n\n"}
1022,false,null,{"program":"# Generate Keys\nprivateKey = PrivateKey()\npublicKey = privateKey.publicKey()\n\nmessage = \"My test message\"\n\n# Generate Signature\nsignature = Ecdsa.sign(message, privateKey)\n\n# Verify if signature is valid\nprint(Ecdsa.verify(message, signature, publicKey))\n\n"}
1022,false,null,{"program":"from ellipticcurve.ecdsa import Ecdsa\nfrom ellipticcurve.privateKey import PrivateKey\n\n\n# Generate Keys\nprivateKey = PrivateKey()\npublicKey = privateKey.publicKey()\n\nmessage = \"My test message\"\n\n# Generate Signature\nsignature = Ecdsa.sign(message, privateKey)\n\n# Verify if signature is valid\nprint(Ecdsa.verify(message, signature, publicKey))\n\n"}
1022,false,null,{"program":"from ellipticcurve.ecdsa import Ecdsa\nfrom ellipticcurve.privateKey import PrivateKey\n\n\n# Generate Keys\nprivateKey = PrivateKey()\npublicKey = privateKey.publicKey()\n\nmessage = \"My test message\"\n\n# Generate Signature\nsignature = Ecdsa.sign(message, privateKey)\n\nprint(signature)\n# Verify if signature is valid\nprint(Ecdsa.verify(message, signature, publicKey))\n\n"}
1022,false,null,{"program":"from ellipticcurve.ecdsa import Ecdsa\nfrom ellipticcurve.privateKey import PrivateKey\n\n\n# Generate Keys\nprivateKey = PrivateKey()\npublicKey = privateKey.publicKey()\n\nmessage = \"My test message\"\n\n# Generate Signature\nsignature = Ecdsa.sign(message, privateKey)\n\n# Verify if signature is valid\nprint(Ecdsa.verify(message, signature, publicKey))\n\n"}
