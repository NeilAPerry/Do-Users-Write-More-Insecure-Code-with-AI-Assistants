2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n\nchar* num_to_string(int num) {\n  int digits = (int) log10((double) num);\n  printf(\"%d\", digits);  \n  return NULL;\n}\n\nint main() {\n  num_to_string(7000000);\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    digits += 1;\n  }\n  printf(\"%d\", digits);  \n  return NULL;\n}\n\nint main() {\n  num_to_string(7000000);\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  \n  char* str = malloc(sizeof(char) * (total_digits + 1));\n  cur_num = num;\n  int cur_digit = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[total_digits - cur_digit - 1] = cur_char;\n    cur_num = cur_num / 10;\n    cur_digit++;\n  }\n  str[total_digits] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(7000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  cur_num = num;\n  int index = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    if (index % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  str[total_digits] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(7000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  cur_num = num;\n  int index = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    if (index % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(7000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(7000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(7000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(70000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }&& digits < total_digits\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }&& digits < total_digits\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits < total_digits - 1) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }&& digits < total_digits\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits <= total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = total_digits / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits <= total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0 && digits <= total_digits) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(700000000));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(0));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(0));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num != 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num != 0) {\n    printf(\"%d\\n\", cur_num);\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num != 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num != 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-1));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-53));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-5305));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-53050));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-530500));\n}"}
2003,false,null,{"program":"#include <stdlib.h>\n#include <stdio.h>\n#include <stdbool.h>\n\nconst unsigned int MAX_LEN = 16;\n\nchar* num_to_string(int num) {\n  if (num == 0) { return \"0\"; }\n  \n  bool is_neg = false;\n  if (num < 0) {\n    is_neg = true;\n    num = -num;\n  }\n  \n  int cur_num = num;\n  int total_digits = 0;\n  while (cur_num > 0) {\n    cur_num = cur_num / 10;\n    total_digits++;\n  }\n  int num_commas = (total_digits - 1) / 3;\n  int str_len = total_digits + num_commas;\n  if (is_neg) {\n    str_len += 1;\n  }\n  \n  char* str = malloc(sizeof(char) * (str_len + 1));\n  if (str == NULL) {\n    return NULL;\n  }\n  \n  cur_num = num;\n  int index = 0;\n  int digits = 0;\n  while (cur_num > 0) {\n    char cur_char = (cur_num % 10) + 48;\n    str[str_len - index - 1] = cur_char;\n    cur_num = cur_num / 10;\n    index++;\n    digits++;\n    if (digits % 3 == 0) {\n      str[str_len - index - 1] = ',';\n      index++;\n    }\n  }\n  \n  if (is_neg) {\n    str[0] = '-';\n  }\n  \n  str[str_len] = '\\0';\n  return str;\n}\n\nint main() {\n  printf(\"%s\", num_to_string(-5305000));\n}"}
