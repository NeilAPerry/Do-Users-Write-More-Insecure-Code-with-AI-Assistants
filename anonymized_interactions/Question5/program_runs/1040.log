1040,false,null,{"program":"int reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\nchar s[7] = {'\\0'};\n\nint_to_string(1234, s, 4)\n"}
1040,false,null,{"program":"int reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\nchar s[7] = {'\\0'};\n\nint_to_string(1234, s, 4);"}
1040,false,null,{"program":"int reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\nchar s[7] = {'\\0'};\n\nsnprintf(s, \"%d\", 1234);"}
1040,false,null,{"program":"int reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\n\nint main() {\n  char s[7];\n  snprintf(s, \"%d\", 1234);\n }"}
1040,false,null,{"program":"#include stdio.h\nint reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\n\nint main() {\n  char s[7];\n  snprintf(s, \"%d\", 1234);\n }"}
1040,false,null,{"program":"#include <stdio.h>\nint reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\n\nint main() {\n  char s[7];\n  snprintf(s, \"%d\", 1234);\n }"}
1040,false,null,{"program":"#include <stdio.h>\nint reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\n\nint main() {\n  char s[7];\n  sprintf(s, \"%d\", 1234);\n }"}
1040,false,null,{"program":"#include <stdio.h>\nint reverse(char* str, int len)\n{\n    int i = 0;\n    int j = len - 1;\n    while(i < j)\n    {\n        char temp = str[i];\n        str[i] = str[j];\n        str[j] = temp;\n        i++;\n        j--;\n    }\n    return len;\n}\n\nint int_to_string(int x, char* str, int d)\n{\n\tint i = 0;\n\twhile (x)\n\t{\n\t\tstr[i++] = (x % 10) + '0';\n\t\tx = x / 10;\n\t}\n\n\t// If number of digits required is more, then\n\t// add 0s at the beginning\n\twhile (i < d)\n\t\tstr[i++] = '0';\n\n\treverse(str, i);\n\tstr[i] = '\\0';\n\treturn i;\n}\n/*\nint int_to_string_with_commas(char *dest, int value, int min_digits) {\n  char string[12];\n  int digits = int_to_string(string, value, min_digits);\n  int index = 0;\n  int comma_index = digits % 3;\n  if (comma_index == 0) comma_index = 3;\n  while (digits > 0) {\n    dest[index++] = string[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index++] = ',';\n  }\n  dest[index] = 0;\n  return index;\n}\n*/\n\nint main() {\n  char s[7];\n  sprintf(s, \"%d\", 1234);\n  printf(\"%s\", s);\n }"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits]\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = \"\\0\"; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(7000000);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits]\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = \"\\0\"; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(7000000);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits]\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = \"\\0\"; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(7000000);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = \"\\0\"; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(7000000);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(7000000);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits)\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", asdsad);\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  printf(\"%s\", \"vvv\");\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  printf(\"%s\", \"vvv\");\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  printf(\"%s\", \"vvv\");\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  printf(\"%s\", \"vvv\");\n  char* ans = int_to_string_with_commas(1);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  printf(\"%s\", \"vvv\");\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0'; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  printf(\"%s\", \"asdsad\");\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  printf(\"%d\", digits);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  printf(\"%s\", num_commas);  \n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  printf(\"%d\", num_commas);  \n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  printf(\"%d\", num_commas);  \n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  printf(\"%s\", s);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  printf(\"%d\", digits);  \n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  printf(\"%s\", s);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  printf(\"%s\", s);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  printf(\"%d\", index); \n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  printf(\"%s\", dest);\n  return dest; \n  \n}\n\nint main() {\n  char* ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar[] int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  printf(\"%s\", dest);\n  return dest; \n  \n}\n\nint main() {\n  char[] ans = int_to_string_with_commas(10);\n  printf(\"%s\", ans);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  printf(\"%s\", dest);\n  return dest; \n  \n}\n\nint main() {\n   int_to_string_with_commas(10);\n}"}
1040,false,null,{"program":"#include <stdio.h>\n\nint num_digits(int n)\n{\n\tint digits = 0;\n\t\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tdigits++;\n\t}\n\t\n\treturn digits;\n}\n\n\nchar* int_to_string_with_commas(int value) {\n  int is_negative = value < 0;\n  if (is_negative) {\n    value *= -1;\n  }\n  int digits = num_digits(value);\n  int num_commas = digits / 3;\n  if (digits % 3 == 0) {\n    num_commas -= 1;\n  }\n  char s[digits];\n  int size = digits + num_commas + 1;\n  char dest[size];\n  sprintf(s, \"%d\", value);\n  int index = size - 2;\n  while (digits > 0) {\n    dest[index--] = s[digits - 1];\n    if (--digits % 3 == 0 && digits > 0) dest[index--] = ',';\n  }\n  dest[size - 1] = '\\0';\n  printf(\"%s\", dest);\n  return dest; \n  \n}\n\nint main() {\n   int_to_string_with_commas(7000000);\n}"}
