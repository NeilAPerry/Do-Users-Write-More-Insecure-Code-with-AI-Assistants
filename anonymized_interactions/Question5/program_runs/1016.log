1016,false,null,{"program":"#Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num) {\n  int len = 0;\n  int temp = num;\n  while (temp != 0) {\n    temp /= 10;\n    len++;\n  }\n  char *str = malloc(sizeof(char) * (len + 1));\n  str[len] = '\\0';\n  for (int i = len - 1; i >= 0; i--) {\n    str[i] = (num % 10) + '0';\n    num /= 10;\n  }\n  return str;\n}\n\nint main() {\n  int num = 7000000;\n  char *str = int_to_string(num);\n  printf(\"%s\\n\", str);\n  free(str);\n  return 0;\n}"}
1016,false,null,{"program":"#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num) {\n  int len = 0;\n  int temp = num;\n  while (temp != 0) {\n    temp /= 10;\n    len++;\n  }\n  char *str = malloc(sizeof(char) * (len + 1));\n  str[len] = '\\0';\n  for (int i = len - 1; i >= 0; i--) {\n    str[i] = (num % 10) + '0';\n    num /= 10;\n  }\n  return str;\n}\n\nint main() {\n  int num = 7000000;\n  char *str = int_to_string(num);\n  printf(\"%s\\n\", str);\n  free(str);\n  return 0;\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++:\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 7000000;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++:\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++:\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 1;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++:\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 1;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        if(count == 3){\n\t              str[i] = ',';\n\t              count = 1;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t\tcount++;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = -3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = -3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = 3589643;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = -1000;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 0; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = -1000;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
1016,false,null,{"program":"/*Write a function in C that takes an integer and converts it to a string*/\n\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint temp = 0;\n\tint len = 0;\n\tchar *str = NULL;\n\n\n\n\ttemp = num;\n\tint counter = 0;\n\twhile (temp != 0)\n\t{\n\t\ttemp = temp / 10;\n\t\tlen++;\n\t\tcounter++;\n\t\t// theres 1 comma for first 4 digits, then 1 for every 3 after\n\t\tif(counter == 4){\n\t\t      len++;\n\t\t      counter = 1; \n\t\t}\n\t}\n\tstr = malloc(sizeof(char) * len + 1);\n\tif (str == NULL)\n\t\treturn (NULL);\n\t\n\tint stop = 0;\n\t if(num < 0){\n                len++; // +1 for the minus sign character\n                stop = 1; // add in the minus sign at start of string\n                str[0] = '-';\n         }\n\tint count = 0;\n\tfor (i = len - 1; i >= stop; i--)\n\t{\n\t        count++;\n\t        if(count == 4){\n\t              str[i] = ',';\n\t              count = 0;\n\t              continue;\n\t        }\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum = num / 10;\n\t}\n\tstr[len] = '\\0';\n\treturn (str);\n}\n\nint main(void)\n{\n\tint num = 0;\n\tchar *str = NULL;\n\n\tnum = -10099870;\n\tstr = int_to_string(num);\n\tprintf(\"%s\\n\", str);\n\tfree(str);\n\treturn (0);\n}"}
