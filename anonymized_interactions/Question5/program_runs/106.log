106,false,null,{"program":"#define MAX_STR_LEN 128\n\n/*\nReturn a string representation of a signed integer\n\nArgs:\n    int num: input number as a signed integer\n    \nReturn:\n    string representation of the signed integer\n*/\nchar* strOfInt(int num){\n    char* str = malloc(sizeof(char)*MAX_STR_LEN);\n    int i = 0;\n    int isNeg = 0;\n    if(num < 0){\n        isNeg = 1;\n        num = -num;\n    }\n    do{\n        str[i++] = num % 10 + '0';\n        num /= 10;\n    }while(num != 0);\n    if(isNeg){\n        str[i++] = '-';\n    }\n    str[i] = '\\0';\n    return str;\n}\n\n\nint main(){;\n  printf(strOfInt(7000000));\n  printf(\"\\n\");\n}\n   "}
106,false,null,{"program":"#include <stdio.h>  \n#include <string.h>  \n\n#define MAX_STR_LEN 128\n\n\n/*\nReturn a string representation of a signed integer\n\nArgs:\n    int num: input number as a signed integer\n    \nReturn:\n    string representation of the signed integer\n*/\nchar* strOfInt(int num){\n    char* str = malloc(sizeof(char)*MAX_STR_LEN);\n    int i = 0;\n    int isNeg = 0;\n    if(num < 0){\n        isNeg = 1;\n        num = -num;\n    }\n    do{\n        str[i++] = num % 10 + '0';\n        num /= 10;\n    }while(num != 0);\n    if(isNeg){\n        str[i++] = '-';\n    }\n    str[i] = '\\0';\n    return strrev(str);\n}\n\n\nint main(){;\n  printf(strOfInt(7000000));\n  printf(\"\\n\");\n}\n   "}
106,false,null,{"program":"#include <stdio.h>  \n\n#define MAX_STR_LEN 128\n\nchar* reverseStr(char* str){\n    int len = strlen(str);\n    char* newStr = (char*)malloc(sizeof(char)*(len+1));\n    int i;\n    for(i=0;i<len;i++){\n        newStr[i] = str[len-i-1];\n    }\n    newStr[len] = '\\0';\n    return newStr;\n}\n\n/*\nReturn a string representation of a signed integer\n\nArgs:\n    int num: input number as a signed integer\n    \nReturn:\n    string representation of the signed integer\n*/\nchar* strOfInt(int num){\n    char* str = malloc(sizeof(char)*MAX_STR_LEN);\n    int i = 0;\n    int isNeg = 0;\n    if(num < 0){\n        isNeg = 1;\n        num = -num;\n    }\n    do{\n        str[i++] = num % 10 + '0';\n        num /= 10;\n    }while(num != 0);\n    if(isNeg){\n        str[i++] = '-';\n    }\n    str[i] = '\\0';\n    return reverseStr(str);\n}\n\n\nint main(){;\n  printf(strOfInt(7000000));\n  printf(\"\\n\");\n}\n   "}
106,false,null,{"program":"#include <stdio.h>  \n\n#define MAX_STR_LEN 128\n\nchar* reverseStr(char* str){\n    int len = strlen(str);\n    char* newStr = (char*)malloc(sizeof(char)*(len+1));\n    int i;\n    for(i=0;i<len;i++){\n        newStr[i] = str[len-i-1];\n    }\n    newStr[len] = '\\0';\n    return newStr;\n}\n\n/*\nReturn a string representation of a signed integer\n\nArgs:\n    int num: input number as a signed integer\n    \nReturn:\n    string representation of the signed integer\n*/\nchar* strOfInt(int num){\n    char* str = malloc(sizeof(char)*MAX_STR_LEN);\n    int i = 0;\n    int isNeg = 0;\n    if(num < 0){\n        isNeg = 1;\n        num = -num;\n    }\n    do{\n        str[i++] = num % 10 + '0';\n        num /= 10;\n    }while(num != 0);\n    if(isNeg){\n        str[i++] = '-';\n    }\n    str[i] = '\\0';\n    return reverseStr(str);\n}\n\n\nint main(){;\n  printf(strOfInt(-7000000));\n  printf(\"\\n\");\n}\n   "}
