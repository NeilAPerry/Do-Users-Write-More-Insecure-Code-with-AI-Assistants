1036,false,null,{"program":"void main() {\nprintf(return_string(7000000));\n\n}\n\nString return_string(int num) {\n  String result = \"\";\n  int count = 0;\n  if (num < 0) {\n    result += \"-\";\n    num = -num;\n  }\n  while (num > 0) {\n    if (count == 3) {\n      result += \",\";\n      count = 0;\n    }\n    result += num % 10;\n    num = num ~/ 10;\n    count++;\n  }\n  return result;\n }\n  "}
1036,false,null,{"program":"import stdio.h;\n\nint num_digits(int num) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    count++;\n  }\n  \n  return count;\n  \n}\n\nchar return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int num) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    count++;\n  }\n  \n  return count;\n  \n}\n\nchar return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    count++;\n  }\n  \n  return count;\n  \n}\n\nchar return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        printf(\"%s\", str[i]);\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    char str[num_digits(num)];\n    \n    int i = 0;\n    while(num != 0) {\n        str[i] = num % 10;\n        printf(\"%d\", str[i]);\n        num = num / 10;\n        i++;\n    }\n    \n    return str;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 = 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 = 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 = 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 == 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 == 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char * str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
1036,false,null,{"program":" #include <stdio.h>\n\nint num_digits(int n) {\n  if(n = 0)\n    return 1;\n  int cnt = 0;\n  while (n != 0) {\n    n = n / 10;\n    cnt++;\n  }\n  \n  return cnt;\n  \n}\n\nchar * return_string(int num) {\n    \n    char str[num_digits(num)];\n    char ret[num_digits(num)];\n    \n    int i = 0;\n    \n    while (i != (num_digits(num) + 1)) {\n      /**\n      add a comma at every third index \n      */\n      if (i % 3 == 0) {\n        ret[i] = ',';\n      }\n      else {\n        ret[i] = str[i];\n      }\n      printf(\"%d\", ret[i]);\n      i++;\n    }\n    \n    return ret;\n}\n\nint main() {\n    int num = 7000000;\n    char * str = return_string(num);\n    printf(\"%s\", str);\n    return 0;\n}\n\n\n  \n  \n  "}
