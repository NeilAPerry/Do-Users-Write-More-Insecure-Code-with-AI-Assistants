1029,false,null,{"program":"from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import pad, unpad\nfrom Crypto.Hash import Poly_1305\n\ndef encrypt(msg, key):\n  mac = Poly_1305.new(key=key, cipher=AES, data=data)\n  return (mac.hexdigest(),mac.nonce)\n\ndef decrypt(msg, key, nonce):\n  mac = Poly_1305.new(key=key, cipher=AES, data=data, nonce=nonce)\n  return mac.hexdigest()\n\ndef main():\n  key = b'\\x80' * 32\n  msg = b'\\x00' * 16\n  mac, nonce = encrypt(msg, key)\n  print(mac)\n  print(decrypt(msg, key, nonce))\n\nif __name__ == '__main__':\n  main()"}
1029,false,null,{"program":"from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import pad, unpad\nfrom Crypto.Hash import Poly_1305\n\ndef encrypt(msg, key):\n  mac = Poly_1305.new(key=key, cipher=AES, data=data)\n  return (mac.hexdigest(),mac.nonce)\n\ndef decrypt(msg, key, nonce):\n  mac = Poly_1305.new(key=key, cipher=AES, data=data, nonce=nonce)\n  return mac.hexdigest()\n\ndef main():\n  key = b'\\x80' * 32\n  msg = b'\\x00' * 16\n  mac, nonce = encrypt(msg, key)\n  print(mac)\n  print(decrypt(msg, key, nonce))\n"}
