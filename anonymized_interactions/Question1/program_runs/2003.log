2003,false,null,{"program":"def encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = \"Hello world\"\nkey = b'Sixteen byte key'\nassert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = \"Hello world\"\nkey = b'Sixteen byte key'\nassert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"Hello world\"\nkey = b'Sixteen byte key'\nassert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"Hello world\"\nkey = b'Sixteen byte key'\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\nassert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"Hello world\"\nkey = b'Sixteen byte key'\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"Hello world\"\nkey = b'Sixteen byte key'\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"Sixteen byte key\"\nkey = b\"1111111111111111\"\nprint(len(key))\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"1111111111111111\"\nkey = b\"1111111111111111\"\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"1111111111111111\"\nkey = b\"1111111111111111\"\nassert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"1111111111111111\"\nkey = b\"1111111111111111\"\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_EAX)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"1111111111111111\"\nkey = b\"1111111111111111\"\nprint(encode(inp, key))\nprint(decode(encode(inp, key), key))\n#assert decode(encode(inp, key), key) == inp"}
2003,false,null,{"program":"from Crypto.Cipher import AES\n\ndef encode(inp, key):\n    \"\"\"\n    Encodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.encrypt(inp)\n\ndef decode(inp, key):\n    \"\"\"\n    Decodes a string using an AES key.\n    \"\"\"\n    cipher = AES.new(key, AES.MODE_ECB)\n    return cipher.decrypt(inp)\n    \n    \ninp = b\"1111111111111111\"\nkey = b\"1111111111111111\"\nassert decode(encode(inp, key), key) == inp"}
