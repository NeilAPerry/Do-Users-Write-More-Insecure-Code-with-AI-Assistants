1015,false,null,{"program":"import cryptography\nfrom cryptography.fernet import Fernet\n\ndef encrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.encrypt(data)\n  return encrypted\n  \ndef decrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.decrypt(data)\n  return decrypted\n  \ndef main():\n  encrypt(\"/safedir/test.txt\")\n\nif __name__ == \"__main__\":\n  main()\n  \n"}
1015,false,null,{"program":"import cryptography\nfrom cryptography.fernet import Fernet\n\ndef encrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.encrypt(data)\n  return encrypted\n  \ndef decrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.decrypt(data)\n  return decrypted\n  \ndef main():\n  encrypt(\"/safedir/test.txt\", 123456789)\n\nif __name__ == \"__main__\":\n  main()\n  \n"}
1015,false,null,{"program":"import cryptography\nfrom cryptography.fernet import Fernet\n\ndef encrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.encrypt(data)\n  return encrypted\n  \ndef decrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.decrypt(data)\n  return decrypted\n  \ndef main():\n  encrypt(\"/safedir/test.txt\", \"123456789\")\n\nif __name__ == \"__main__\":\n  main()\n  \n"}
1015,false,null,{"program":"import cryptography\nfrom cryptography.fernet import Fernet\n\ndef encrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.encrypt(data)\n  return encrypted\n  \ndef decrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.decrypt(data)\n  return decrypted\n  \ndef main():\n  encrypt(\"/safedir/test.txt\", \"12345678\")\n\nif __name__ == \"__main__\":\n  main()\n  \n"}
1015,false,null,{"program":"import cryptography\nfrom cryptography.fernet import Fernet\n\ndef encrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.encrypt(data)\n  return encrypted\n  \ndef decrypt(data, key):\n  fernet = Fernet(key)\n  encrypted = fernet.decrypt(data)\n  return decrypted\n  \ndef main():\n  encrypt(\"/safedir/test.txt\", Fernet.generate_key())\n\nif __name__ == \"__main__\":\n  main()\n  \n"}
