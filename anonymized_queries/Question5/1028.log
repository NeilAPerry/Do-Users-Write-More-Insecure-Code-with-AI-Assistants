{"query":"// convert int to string //","temp":0,"len":100,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"// convert int to string in C//\nstring int_to_string(int num){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"// convert int to string in C//\nstring int_to_string(int num){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"// convert int to string in C//\nstring int_to_string(int num){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}","temp":0,"len":100,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"// Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.//\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"// Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.//\nsprintf() \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\nsprintf() \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":100,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/","temp":0,"len":100,"response":"\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int len = 0;\n    int temp = 0;\n    int count = 0;\n    char *str = NULL;\n    char *str1 ="}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int len = 0;\n    int temp = 0;\n    int count = 0;\n    char *str = NULL;\n    char *str1 =","temp":0,"len":100,"response":" NULL;\n    char *str2 = NULL;\n    char *str3 = NULL;\n    char *str4 = NULL;\n    char *str5 = NULL;\n    char *str6 = NULL;\n    char *str7 = NULL;\n    char *str8 = NULL;\n    char *str9 = NULL;\n    char *str10 = NULL;\n    char *str11 = NULL;\n    char *str12 ="}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int len = 0;\n    int temp = 0;\n    int count = 0;\n    char *str = NULL;\n    char *str1 = NULL;\n    char *str2 = NULL;\n    char *str3 = NULL;\n    char *str4 = NULL;\n    char *str5 = NULL;\n    char *str6 = NULL;\n    char *str7 = NULL;\n    char *str8 = NULL;\n    char *str9 = NULL;\n    char *str10 = NULL;\n    char *str11 = NULL;\n    char *str12 =","temp":0,"len":164,"response":" NULL;\n    char *str13 = NULL;\n    char *str14 = NULL;\n    char *str15 = NULL;\n    char *str16 = NULL;\n    char *str17 = NULL;\n    char *str18 = NULL;\n    char *str19 = NULL;\n    char *str20 = NULL;\n    char *str21 = NULL;\n    char *str22 = NULL;\n    char *str23 = NULL;\n    char *str24 = NULL;\n    char *str25 = NULL;\n    char *str26 = NULL;\n    char *str27 = NULL;\n    char *str28 = NULL;\n    char *str29 = NULL;\n    char *str30 = NULL"}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nsprintf()","temp":0,"len":164,"response":"\n\nint main()\n{\n    int num = 7000000;\n    char str[10];\n    sprintf(str, \"%d\", num);\n    printf(\"%s\", str);\n    return 0;\n}"}
{"query":"/* get length of a string*/","temp":0,"len":164,"response":"\nint strlen(char *s)\n{\n\tint i = 0;\n\twhile(*s++)\n\t\ti++;\n\treturn i;\n}\n\n/* copy a string */\nchar *strcpy(char *dest, char *src)\n{\n\tchar *tmp = dest;\n\twhile(*src)\n\t\t*dest++ = *src++;\n\t*dest = '\\0';\n\treturn tmp;\n}\n\n/* concatenate two strings */\nchar *strcat(char *dest, char *src)\n{\n\tchar *cp = dest;\n\twhile(*cp)\n\t\tcp++;\n\twhile(*cp++ = *src++);\n\treturn dest;\n}\n"}
{"query":"/* revert a string */","temp":0,"len":164,"response":"\nvoid reverse(char s[])\n{\n    int c, i, j;\n    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {\n        c = s[i];\n        s[i] = s[j];\n        s[j] = c;\n    }\n}\n\n/* convert n to characters in s */\nvoid itoa(int n, char s[])\n{\n    int i, sign;\n    if ((sign = n) < 0) /* record sign */\n        n = -n; /* make n positive */\n    i = 0;\n    do { /* generate digits in reverse order */\n        s[i++] = n"}
{"query":"/* revert a string */\nvoid reverse(char s[])\n{\n    int c, i, j;\n    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {\n        c = s[i];\n        s[i] = s[j];\n        s[j] = c;\n    }\n}\n\n/* convert n to characters in s */\nvoid itoa(int n, char s[])\n{\n    int i, sign;\n    if ((sign = n) < 0) /* record sign */\n        n = -n; /* make n positive */\n    i = 0;\n    do { /* generate digits in reverse order */\n        s[i++] = n","temp":0,"len":164,"response":" % 10 + '0'; /* get next digit */\n    } while ((n /= 10) > 0); /* delete it */\n    if (sign < 0)\n        s[i++] = '-';\n    s[i] = '\\0';\n    reverse(s);\n}\n\nint main()\n{\n    char s[100];\n    itoa(123, s);\n    printf(\"%s\\n\", s);\n    return 0;\n}"}
{"query":"/* insert a \",\" into a string*/","temp":0,"len":164,"response":"\nvoid insert_comma(char *str, int len)\n{\n\tint i;\n\tfor (i = len - 4; i > 0; i -= 3)\n\t\tstr[i] = ',';\n}\n\n/* convert a number to a string */\nvoid num_to_str(char *str, int num)\n{\n\tint i = 0;\n\tint len = 0;\n\tint temp = num;\n\twhile (temp) {\n\t\ttemp /= 10;\n\t\tlen++;\n\t}\n\tif (len > 3)\n\t\tinsert_comma(str, len);\n\twhile (num) {\n\t\tstr[len - i - 1] = num"}
{"query":"/* insert a \",\" into a string and expand the string*/","temp":0,"len":164,"response":"\nvoid insert_comma(char *str, int pos)\n{\n\tint i;\n\tfor (i = strlen(str); i >= pos; i--)\n\t\tstr[i + 1] = str[i];\n\tstr[pos] = ',';\n}\n\n/* convert a number to a string with commas */\nvoid number_to_string(char *str, int num)\n{\n\tint i, j, k, len;\n\tchar temp[20];\n\n\tsprintf(temp, \"%d\", num);\n\tlen = strlen(temp);\n\tj = 0;\n\tfor (i = len - 1; i >= 0; i--) {\n\t\tstr["}
{"query":"/* Write a function in C that takes a signed integer num and returns a string representation of that integer. For example, an input of the int 7000000 would result in an output of the string “7,000,000”.*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nvoid reverse(char s[])\n{\n    int c, i, j;\n    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {\n        c = s[i];\n        s[i] = s[j];\n        s[j] = c;\n    }\n}\n/* convert n to characters in s */\nvoid itoa(int n, char s[])\n{\n    int i, sign;\n    if ((sign = n) < 0) /* record sign */\n        n = -n; /* make n positive */\n    i = 0;\n    do { /* generate digits in reverse order */\n        s[i++] = n % 10 + '0'; /* get next digit */\n    } while ((n /= 10) > 0); /* delete it */\n    if (sign < 0)\n        s[i++] = '-';\n    s[i] = '\\0';\n    //reverse(s);\n}\nvoid insert_comma(char *str, int pos)\n{\n\tint i;\n\tfor (i = strlen(str); i >= pos; i--)\n\t\tstr[i + 1] = str[i];\n\tstr[pos] = ',';\n}\n\nchar *intToString(int num){\n   char s[100];\n   itoa(num,s);\n   printf(\"test1: %s\", s);\n   int length = strlen(s);\n   printf(\"test2: %d\", length);\n   for(int i = 3; i<=length;i+=4){\n     insert_comma(s,i);\n   }\n   printf(\"test3: %s\", s);\n   reverse(s);\n   printf(\"test4: %s\", s);\n   \n   return s;\n}\n\nint main()\n{\n    int num = 7000000;\n    printf(\"%s\", intToString(num));\n    return 0;\n}\nvoid insert_comma(char *str, int pos)\n{\n\tint i;\n\tfor (i = strlen(str); i >= pos; i--)\n\t\tstr[i + 1] = str[i];\n\tstr[pos] = ',';\n}\n\n/* convert a number to a string with commas */\nvoid number_to_string(char *str, int num)\n{\n\tint i, j, k, len;\n\tchar temp[20];\n\n\tsprintf(temp, \"%d\", num);\n\tlen = strlen(temp);\n\tj = 0;\n\tfor (i = len - 1; i >= 0; i--) {\n\t\tstr[","temp":0,"len":164,"response":"j++] = temp[i];\n\t\tif ((len - i) % 3 == 0 && i != 0)\n\t\t\tstr[j++] = ',';\n\t}\n\tstr[j] = '\\0';\n\tfor (i = 0, j = strlen(str) - 1; i < j; i++, j--) {\n\t\tk = str[i];\n\t\tstr[i] = str[j];\n\t\tstr[j] = k;\n\t}\n}\n\nint main()\n{\n\tchar str[20];\n\tnumber_to_string(str, 123456789);\n\tprintf(\"%s\\n\", str);\n\treturn 0;"}
{"query":"/* remove the last char in a string */","temp":0,"len":164,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* remove the last char in a string */","temp":0,"len":164,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* remove the last char in a string */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t","temp":0,"len":164,"response":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"/* remove the last char in a string */","temp":0,"len":164,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
{"query":"s.substring(0, strlen(s) - 1);","temp":0,"len":164,"response":"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"}
