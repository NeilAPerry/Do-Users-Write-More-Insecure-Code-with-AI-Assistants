{"query":"#function in C that takes a signed integer num and returns a string representation of that integer.","temp":0,"len":100,"response":"\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+char *int_to_str(int num)\n+{\n+\tint i = 0;\n+\tint j = 0;\n+\tint len = 0;\n+\tint temp = num;\n+\tchar *str;\n+\n+\tif (num == 0)"}
{"query":"#function in C that takes a signed integer num and returns a string representation of that integer.\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+char *int_to_str(int num)\n+{\n+\tint i = 0;\n+\tint j = 0;\n+\tint len = 0;\n+\tint temp = num;\n+\tchar *str;\n+\n+\tif (num == 0)","temp":0,"len":156,"response":"\n+\t{\n+\t\tstr = malloc(sizeof(char) * 2);\n+\t\tif (str == NULL)\n+\t\t\treturn (NULL);\n+\t\tstr[0] = '0';\n+\t\tstr[1] = '\\0';\n+\t\treturn (str);\n+\t}\n+\tif (num < 0)\n+\t{\n+\t\tnum = num * -1;\n+\t\tlen++;\n+\t}\n+\twhile (temp != 0)\n+\t{\n+\t\ttemp = temp / 10;\n+\t\tlen++;\n+\t}\n+\tstr = malloc(sizeof("}
{"query":"#function in C that takes a signed integer num and returns a string representation of that integer.\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+char *int_to_str(int num)\n+{\n+\tint i = 0;\n+\tint j = 0;\n+\tint len = 0;\n+\tint temp = num;\n+\tchar *str;\n+\n+\tif (num == 0)\n+\t{\n+\t\tstr = malloc(sizeof(char) * 2);\n+\t\tif (str == NULL)\n+\t\t\treturn (NULL);\n+\t\tstr[0] = '0';\n+\t\tstr[1] = '\\0';\n+\t\treturn (str);\n+\t}\n+\tif (num < 0)\n+\t{\n+\t\tnum = num * -1;\n+\t\tlen++;\n+\t}\n+\twhile (temp != 0)\n+\t{\n+\t\ttemp = temp / 10;\n+\t\tlen++;\n+\t}\n+\tstr = malloc(sizeof(","temp":0,"len":200,"response":"char) * (len + 1));\n+\tif (str == NULL)\n+\t\treturn (NULL);\n+\tstr[len] = '\\0';\n+\tlen--;\n+\twhile (num != 0)\n+\t{\n+\t\tj = num % 10;\n+\t\tstr[len] = j + '0';\n+\t\tnum = num / 10;\n+\t\tlen--;\n+\t}\n+\tif (temp < 0)\n+\t\tstr[0] = '-';\n+\treturn (str);\n+}\n+\n+int main(void)\n+{\n+\tint num = -123;\n+\tchar *str;\n+\n+\tstr = int_to_str(num);\n+\tprintf(\"%s\\n\", str);\n+\tfree(str);\n+\treturn ("}
