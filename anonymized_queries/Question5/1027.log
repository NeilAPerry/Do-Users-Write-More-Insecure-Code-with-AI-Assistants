{"query":"\"\"\"\nretuirn string representation of integer\n\"\"\"","temp":0,"len":100,"response":"\ndef int_to_string(x):\n    is_negative = False\n    if x < 0:\n        x, is_negative = -x, True\n\n    s = []\n    while True:\n        s.append(chr(ord('0') + x % 10))\n        x //= 10\n        if x == 0:\n            break\n\n    return ('-' if is_negative else '') + ''.join(reversed"}
{"query":"\"\"\"\nretuirn string representation of integer\n\"\"\"","temp":0,"len":100,"response":"\ndef int_to_string(x):\n    is_negative = False\n    if x < 0:\n        x, is_negative = -x, True\n\n    s = []\n    while True:\n        s.append(chr(ord('0') + x % 10))\n        x //= 10\n        if x == 0:\n            break\n\n    return ('-' if is_negative else '') + ''.join(reversed"}
{"query":"/*\nreturn string representation of number\n*/","temp":0,"len":100,"response":"\nstring Number::toString() const\n{\n\treturn to_string(value);\n}\n\n/*\nreturn value of number\n*/\ndouble Number::calculate() const\n{\n\treturn value;\n}\n\n/*\nreturn a copy of the number\n*/\nExpression* Number::clone() const\n{\n\treturn new Number(*this);\n}"}
{"query":"/*\nconvert integer to string in c\n*/","temp":0,"len":100,"response":"\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint len = 0;\n\tint temp = 0;\n\tchar *str = NULL;\n\n\ttemp = num;\n\twhile (temp)\n\t{\n\t\ttemp /="}
{"query":"/*\nconvert integer to string in c\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar *int_to_string(int num)\n{\n\tint i = 0;\n\tint j = 0;\n\tint len = 0;\n\tint temp = 0;\n\tchar *str = NULL;\n\n\ttemp = num;\n\twhile (temp)\n\t{\n\t\ttemp /=","temp":0,"len":100,"response":" 10;\n\t\tlen++;\n\t}\n\n\tstr = (char *)malloc(sizeof(char) * (len + 1));\n\tif (str == NULL)\n\t{\n\t\treturn NULL;\n\t}\n\n\tfor (i = len - 1; i >= 0; i--)\n\t{\n\t\tstr[i] = (num % 10) + '0';\n\t\tnum /= 10;\n\t}"}
{"query":"/*\nint to string\n*/","temp":0,"len":100,"response":"\nstring itos(int i)\n{\n    stringstream s;\n    s << i;\n    return s.str();\n}\n\n/*\nstring to int\n*/\nint stoi(string s)\n{\n    int i;\n    stringstream ss(s);\n    ss >> i;\n    return i;\n}\n\n/*\nstring to double\n*/\ndouble stod(string s)\n{\n    double d"}
{"query":"/*\nint to char array\n*/\nstring itos(int i)\n{\n    stringstream s;\n    s << i;\n    return s.str();\n}\n\n/*\nstring to int\n*/\nint stoi(string s)\n{\n    int i;\n    stringstream ss(s);\n    ss >> i;\n    return i;\n}\n\n/*\nstring to double\n*/\ndouble stod(string s)\n{\n    double d","temp":0,"len":100,"response":";\n    stringstream ss(s);\n    ss >> d;\n    return d;\n}\n\n/*\ndouble to string\n*/\nstring dtos(double d)\n{\n    stringstream s;\n    s << d;\n    return s.str();\n}\n\n/*\nstring to char array\n*/\nchar* stoc(string s)\n{\n    char* c = new char[s.length() + 1"}
