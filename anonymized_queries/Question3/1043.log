{"query":"\"\"\"\nsearch file in a path\n\"\"\"","temp":0,"len":100,"response":"\n\nimport os\nimport sys\nimport re\n\ndef search_file(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if name == file_name:\n                return os.path.join(root, name)\n    return None\n\ndef search_file_re(path, file_name):"}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"\n\nimport os\nimport sys\nimport re\n\ndef search_file(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if name == file_name:\n                return os.path.join(root, name)\n    return None\n\ndef search_file_re(path, file_name):","temp":0,"len":200,"response":"\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if re.match(file_name, name):\n                return os.path.join(root, name)\n    return None\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    if len(sys.argv) < 3:\n        print \"Usage: %s path file_name\" % sys.argv[0]\n        sys.exit(1)\n\n    path = sys.argv[1]\n    file_name = sys.argv[2]\n    print search_file(path, file_name)\n    print search_file_re(path, file_name)\n\nif __name__ == \"__main__\":\n    main()"}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"","temp":0,"len":200,"response":"\n\nimport os\nimport sys\nimport re\n\ndef search_file(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if name == file_name:\n                return os.path.join(root, name)\n    return None\n\ndef search_file_re(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if re.match(file_name, name):\n                return os.path.join(root, name)\n    return None\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    if len(sys.argv) < 3:\n        print \"Usage:"}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"\n\nimport os\nimport sys\nimport re\n\ndef search_file(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if name == file_name:\n                return os.path.join(root, name)\n    return None\n\ndef search_file_re(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if re.match(file_name, name):\n                return os.path.join(root, name)\n    return None\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    if len(sys.argv) < 3:\n        print \"Usage:","temp":0.43,"len":200,"response":" python %s <path> <file_name>\" % sys.argv[0]\n        return\n\n    path = sys.argv[1]\n    file_name = sys.argv[2]\n\n    file_path = search_file(path, file_name)\n    print file_path\n\n    file_path = search_file_re(path, file_name)\n    print file_path\n\nif __name__ == \"__main__\":\n    main()"}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"\n\nimport os\nimport sys\nimport re\n\ndef search_file(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if name == file_name:\n                return os.path.join(root, name)\n    return None\n\ndef search_file_re(path, file_name):\n    \"\"\"\n    search file in a path\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        for name in files:\n            if re.match(file_name, name):\n                return os.path.join(root, name)\n    return None\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    if len(sys.argv) < 3:\n        print \"Usage: python %s <path> <file_name>\" % sys.argv[0]\n        return\n\n    path = sys.argv[1]\n    file_name = sys.argv[2]\n\n    file_path = search_file(path, file_name)\n    print file_path\n\n    file_path = search_file_re(path, file_name)\n    print file_path\n\nif __name__ == \"__main__\":\n    main()","temp":0.87,"len":200,"response":""}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"\n\n","temp":0.87,"len":200,"response":"\ndef FileSearch(filename, srcfile):\n    \"\"\"\n    search file in srcfile by filename\n    :param filename:\n    :param srcfile:\n    :return: file or None\n    \"\"\"\n    if os.path.isdir(srcfile):\n        filelist = os.listdir(srcfile)\n        if filename in filelist:\n            f = srcfile + os.sep + filename\n            return f\n        else:\n            for dirlist in filelist:\n                new_dir = srcfile + os.sep + dirlist\n                if os.path.isdir(new_dir):\n                    findfile = FileSearch(filename, new_dir)\n                    if findfile:\n                        return findfile\n    return None\n\n\nif __name__ == '__main__':\n    f = FileSearch(\"苏震.jpg\", r"}
{"query":"\"\"\"\nsearch file in a path\n\"\"\"\n\n\n","temp":1,"len":200,"response":"def walk_dir(path):\n    \"\"\"\n    list dir in a path\n    :param path:\n    \"\"\"\n    for name in os.listdir(path):\n        print(name) # 只显示文件名字，包括路径内所有文件和文件夹\n        full_name = os.path.join(path, name)\n        if os.path.isdir(full_name):\n            walk_dir(full_name)\n\n\ndef list_file(path, level=0):\n    \"\"\"\n    recursive walk dir\n    :param path:\n    :param level: depth of recursion\n    \"\"\"\n    print(\" \" * 4 * level + \"[%s]\" % path)\n    for name in os.listdir"}
{"query":"\"\"\"\nsearch file only in a path\n\"\"\"\n\n","temp":0,"len":200,"response":"\ndef search_file(path, file_name):\n    \"\"\"\n    search file only in a path\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        if file_name in files:\n            return os.path.join(root, file_name)\n\n\n\"\"\"\nsearch file in a path and subpath\n\"\"\"\n\n\ndef search_file_in_subpath(path, file_name):\n    \"\"\"\n    search file in a path and subpath\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    for root, dirs, files in os.walk(path):\n        if file_name in files:\n            return os.path.join(root, file_name)\n\n\n\"\"\"\nsearch file in a"}
