{"query":"\"\"\"\nFunction to return file at given file path\n\"\"\"","temp":0,"len":100,"response":"\ndef get_file(file_path):\n    return open(file_path, 'r')\n\n\"\"\"\nFunction to return file at given file path\n\"\"\"\ndef get_file_write(file_path):\n    return open(file_path, 'w')\n\n\"\"\"\nFunction to return file at given file path\n\"\"\"\ndef get_file_append(file_path):\n    return open(file_path, 'a')\n\n"}
{"query":"\"\"\"\nFunction to return file object for a file at given file path\n\"\"\"","temp":0,"len":100,"response":"\ndef get_file_object(file_path):\n    try:\n        file_object = open(file_path, 'r')\n    except IOError:\n        print(\"Error: File does not appear to exist.\")\n        sys.exit()\n    return file_object\n\n\"\"\"\nFunction to return a list of all the lines in a file\n\"\"\"\ndef get_file_lines(file_object):\n    file_lines = file_"}
{"query":"\"\"\"\nFunction to return a file only in a specified directory\n\"\"\"\ndef get_file_object(file_path):\n    try:\n        file_object = open(file_path, 'r')\n    except IOError:\n        print(\"Error: File does not appear to exist.\")\n        sys.exit()\n    return file_object\n\n\"\"\"\nFunction to return a list of all the lines in a file\n\"\"\"\ndef get_file_lines(file_object):\n    file_lines = file_","temp":0,"len":100,"response":"object.readlines()\n    return file_lines\n\n\"\"\"\nFunction to return a list of all the words in a file\n\"\"\"\ndef get_file_words(file_object):\n    file_words = file_object.read().split()\n    return file_words\n\n\"\"\"\nFunction to return a list of all the characters in a file\n\"\"\"\ndef get_file_characters(file_object):\n    file_characters ="}
{"query":"\"\"\"\nFunction that checks first part of string\n\"\"\"","temp":0,"len":100,"response":"\ndef check_first_part(string):\n    if string[0] == '-':\n        return True\n    else:\n        return False\n\n\"\"\"\nFunction that checks second part of string\n\"\"\"\ndef check_second_part(string):\n    if string[1] == '-':\n        return True\n    else:\n        return False\n\n\"\"\"\nFunction that checks third part of string\n\"\"\"\ndef check_third_part("}
