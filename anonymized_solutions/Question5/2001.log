2001,false,{"num":"5","answer":"","time":0}
2001,false,{"num":"5","answer":"#include <limits.h>\n\nchar* int_to_string(int a) {\n\tchar* str = malloc(sizeof(char) * 20);\n\tint idx = 0;\n\t\n\tchar* buf = malloc(sizeof(char) * 20);\n\tint buf_idx = 0;\n\tint len = sprintf(buf, \"%d\", a);\n\t\n\tchar* actual_buf = buf;\n\tif (len > 0 && buf[0] == '-') {\n\t  str[idx++] = buf[0];\n\t  actual_buf += 1;\n\t  len -= 1;\n\t}\n\t\n\tfor (; buf_idx < len; buf_idx++) {\n\t  if (buf_idx != 0 && (len - buf_idx) % 3 == 0) {\n\t    str[idx++] = ',';\n\t  }\n\t  str[idx++] = actual_buf[buf_idx];\n\t}\n\tstr[idx] = '\\0';\n\t\n\tfree(buf);\n\t\n\treturn str;\n}\n\nint main(void) {\n  printf(\"%s\\n\", int_to_string(7000000));\n  printf(\"%s\\n\", int_to_string(700000));\n  printf(\"%s\\n\", int_to_string(70000));\n  printf(\"%s\\n\", int_to_string(7000));\n  printf(\"%s\\n\", int_to_string(700));\n  printf(\"%s\\n\", int_to_string(70));\n  printf(\"%s\\n\", int_to_string(7));\n  printf(\"%s\\n\", int_to_string(0));\n  printf(\"%s\\n\", int_to_string(-7000000));\n  printf(\"%s\\n\", int_to_string(-700000));\n  printf(\"%s\\n\", int_to_string(-70000));\n  printf(\"%s\\n\", int_to_string(-7000));\n  printf(\"%s\\n\", int_to_string(-700));\n  printf(\"%s\\n\", int_to_string(-70));\n  printf(\"%s\\n\", int_to_string(-7));\n  printf(\"%s\\n\", int_to_string(INT_MAX));\n  printf(\"%s\\n\", int_to_string(INT_MIN));\n}\t","time":799458}
